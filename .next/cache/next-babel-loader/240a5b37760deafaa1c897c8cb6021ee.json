{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/prashanthselvam/Documents/learning/blogr-nextjs-prisma/pages/p/[id].tsx\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Layout from \"../../components/Layout\";\n\nvar Post = function Post(props) {\n  var _props$author;\n\n  var title = props.title;\n\n  if (!props.published) {\n    title = \"\".concat(title, \" (Draft)\");\n  }\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-3440979688\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-3440979688\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"p\", {\n    className: \"jsx-3440979688\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"By \", (props === null || props === void 0 ? void 0 : (_props$author = props.author) === null || _props$author === void 0 ? void 0 : _props$author.name) || \"Unknown author\"), __jsx(ReactMarkdown, {\n    source: props.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"3440979688\",\n    __self: _this\n  }, \".page.jsx-3440979688{background:white;padding:2rem;}.actions.jsx-3440979688{margin-top:2rem;}button.jsx-3440979688{background:#ececec;border:0;border-radius:0.125rem;padding:1rem 2rem;}button.jsx-3440979688+button.jsx-3440979688{margin-left:1rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wcmFzaGFudGhzZWx2YW0vRG9jdW1lbnRzL2xlYXJuaW5nL2Jsb2dyLW5leHRqcy1wcmlzbWEvcGFnZXMvcC9baWRdLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQ2tCLEFBRzRCLEFBS0QsQUFJRyxBQU9GLGdCQVZuQixDQUxlLEFBZ0JmLEVBUFcsU0FDYyxFQVR6QixxQkFVb0Isa0JBQ3BCIiwiZmlsZSI6Ii9Vc2Vycy9wcmFzaGFudGhzZWx2YW0vRG9jdW1lbnRzL2xlYXJuaW5nL2Jsb2dyLW5leHRqcy1wcmlzbWEvcGFnZXMvcC9baWRdLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgR2V0U2VydmVyU2lkZVByb3BzIH0gZnJvbSBcIm5leHRcIlxuaW1wb3J0IFJlYWN0TWFya2Rvd24gZnJvbSBcInJlYWN0LW1hcmtkb3duXCJcbmltcG9ydCBMYXlvdXQgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvTGF5b3V0XCJcbmltcG9ydCB7IFBvc3RQcm9wcyB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL1Bvc3RcIlxuXG5leHBvcnQgY29uc3QgZ2V0U2VydmVyU2lkZVByb3BzOiBHZXRTZXJ2ZXJTaWRlUHJvcHMgPSBhc3luYyAoeyBwYXJhbXMgfSkgPT4ge1xuICBjb25zdCBwb3N0ID0ge1xuICAgIGlkOiAxLFxuICAgIHRpdGxlOiBcIlByaXNtYSBpcyB0aGUgcGVyZmVjdCBPUk0gZm9yIE5leHQuanNcIixcbiAgICBjb250ZW50OiBcIltQcmlzbWFdKGh0dHBzOi8vZ2l0aHViLmNvbS9wcmlzbWEvcHJpc21hKSBhbmQgTmV4dC5qcyBnbyBfZ3JlYXRfIHRvZ2V0aGVyIVwiLFxuICAgIHB1Ymxpc2hlZDogZmFsc2UsXG4gICAgYXV0aG9yOiB7XG4gICAgICBuYW1lOiBcIk5pa29sYXMgQnVya1wiLFxuICAgICAgZW1haWw6IFwiYnVya0BwcmlzbWEuaW9cIixcbiAgICB9LFxuICB9XG4gIHJldHVybiB7XG4gICAgcHJvcHM6IHBvc3QsXG4gIH1cbn1cblxuY29uc3QgUG9zdDogUmVhY3QuRkM8UG9zdFByb3BzPiA9IChwcm9wcykgPT4ge1xuICBsZXQgdGl0bGUgPSBwcm9wcy50aXRsZVxuICBpZiAoIXByb3BzLnB1Ymxpc2hlZCkge1xuICAgIHRpdGxlID0gYCR7dGl0bGV9IChEcmFmdClgXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8ZGl2PlxuICAgICAgICA8aDI+e3RpdGxlfTwvaDI+XG4gICAgICAgIDxwPkJ5IHtwcm9wcz8uYXV0aG9yPy5uYW1lIHx8IFwiVW5rbm93biBhdXRob3JcIn08L3A+XG4gICAgICAgIDxSZWFjdE1hcmtkb3duIHNvdXJjZT17cHJvcHMuY29udGVudH0gLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAucGFnZSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgcGFkZGluZzogMnJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5hY3Rpb25zIHtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAycmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgYnV0dG9uIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZWNlY2VjO1xuICAgICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAwLjEyNXJlbTtcbiAgICAgICAgICBwYWRkaW5nOiAxcmVtIDJyZW07XG4gICAgICAgIH1cblxuICAgICAgICBidXR0b24gKyBidXR0b24ge1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgUG9zdFxuIl19 */\\n/*@ sourceURL=/Users/prashanthselvam/Documents/learning/blogr-nextjs-prisma/pages/p/[id].tsx */\"));\n};\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/prashanthselvam/Documents/learning/blogr-nextjs-prisma/pages/p/[id].tsx"],"names":["React","ReactMarkdown","Layout","Post","props","title","published","author","name","content"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAmBA,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,CAACC,KAAD,EAAW;AAAA;;AAC3C,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;;AACA,MAAI,CAACD,KAAK,CAACE,SAAX,EAAsB;AACpBD,IAAAA,KAAK,aAAMA,KAAN,aAAL;AACD;;AAED,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,CAAAD,KAAK,SAAL,IAAAA,KAAK,WAAL,6BAAAA,KAAK,CAAEG,MAAP,gEAAeC,IAAf,KAAuB,gBAA9B,CAFF,EAGE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEJ,KAAK,CAACK,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAAA;AAAA;AAAA,srFADF;AA8BD,CApCD;;KAAMN,I;;AAsCN,eAAeA,IAAf","sourcesContent":["import React from \"react\"\nimport { GetServerSideProps } from \"next\"\nimport ReactMarkdown from \"react-markdown\"\nimport Layout from \"../../components/Layout\"\nimport { PostProps } from \"../../components/Post\"\n\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\n  const post = {\n    id: 1,\n    title: \"Prisma is the perfect ORM for Next.js\",\n    content: \"[Prisma](https://github.com/prisma/prisma) and Next.js go _great_ together!\",\n    published: false,\n    author: {\n      name: \"Nikolas Burk\",\n      email: \"burk@prisma.io\",\n    },\n  }\n  return {\n    props: post,\n  }\n}\n\nconst Post: React.FC<PostProps> = (props) => {\n  let title = props.title\n  if (!props.published) {\n    title = `${title} (Draft)`\n  }\n\n  return (\n    <Layout>\n      <div>\n        <h2>{title}</h2>\n        <p>By {props?.author?.name || \"Unknown author\"}</p>\n        <ReactMarkdown source={props.content} />\n      </div>\n      <style jsx>{`\n        .page {\n          background: white;\n          padding: 2rem;\n        }\n\n        .actions {\n          margin-top: 2rem;\n        }\n\n        button {\n          background: #ececec;\n          border: 0;\n          border-radius: 0.125rem;\n          padding: 1rem 2rem;\n        }\n\n        button + button {\n          margin-left: 1rem;\n        }\n      `}</style>\n    </Layout>\n  )\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}